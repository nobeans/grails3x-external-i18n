---
grails:
    profile: web
    codegen:
        defaultPackage: grails3x.external.i18n
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    groovy:
        template:
            check-template-location: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none

# i18nメッセージリソースの指定
#   リソースの順番について
#     メッセージキーの解決は先に見つかったキーが優先される。
#     そのため同じキーが複数のファイルに存在する場合は、先に読み込んだファイルのキーが優先される。
#   ファイルの指定方法について
#     指定方法は以下の３つが存在する。
#      - 無印
#          ServletContext#getResourceで解決されるようにWARの展開ディレクトリを起点に解決される。
#          先頭に/がついていてもついていなくても(例: /WEB-INF/xxx と WEB-INF/xxx)同じ動作をするが、正式には/を付けるのが正解。
#      - file:
#          ファイルパスに従い解決される。
#          WARの展開ディレクトを起点に相対パスで解決したい場合はfile:を使用せず無印でパスを指定すること。
#      - classpath:
#          クラスパスに従い解決される。
i18n:
    messageSource:
        additionalBasenames:
          - file:///tmp/my               # ファイル名は自由につけて良い。拡張子(.properties)は省略して指定する。
          - /WEB-INF/grails-app/i18n/my  # my.properties, my_ja.properties などのように各言語ごとのファイルを配置できる
        defaultEncoding: UTF-8

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false
        region.factory_class: 'org.hibernate.cache.ehcache.EhCacheRegionFactory'

endpoints:
    jmx:
        unique-names: true

dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.h2.Driver
    username: sa
    password:

environments:
    development:
        dataSource:
            dbCreate: create-drop
            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
